name: Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Sync to S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "."

    - name: Invalidate CloudFront cache
      uses: chetan/invalidate-cloudfront-action@v2
      continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        PATHS: "/*"

    - name: Set deployment status
      id: set_status
      run: echo "status=${{ job.status }}" >> $GITHUB_OUTPUT

    - name: Send Discord notification
      if: always()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{
              "content": "🚀 **배포 결과**:\n- 상태: ${{ steps.set_status.outputs.status }}\n- 브랜치: `${{ github.ref_name }}`\n- 커밋: `${{ github.event.head_commit.message }}`\n- 작성자: `${{ github.actor }}`"
            }' \
        ${{ secrets.DISCORD_WEBHOOK_URL_VANILA }}
